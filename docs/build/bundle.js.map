{"version":3,"file":"bundle.js","sources":["../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/esm/inherits.js","../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../node_modules/@babel/runtime/helpers/esm/get.js","../../node_modules/@babel/runtime/helpers/esm/createClass.js","../../node_modules/svelte/internal/index.mjs","../../node_modules/@math.gl/core/dist/esm/lib/assert.js","../../node_modules/@math.gl/core/dist/esm/lib/common.js","../../node_modules/@math.gl/core/dist/esm/classes/base/math-array.js","../../node_modules/@math.gl/core/dist/esm/lib/validators.js","../../node_modules/gl-matrix/esm/vec2.js","../../node_modules/@math.gl/core/dist/esm/classes/base/vector.js","../../node_modules/gl-matrix/esm/common.js","../../node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js","../../node_modules/gl-matrix/esm/vec3.js","../../node_modules/@math.gl/core/dist/esm/classes/vector3.js","../../node_modules/@math.gl/core/dist/esm/classes/base/matrix.js","../../node_modules/gl-matrix/esm/mat4.js","../../node_modules/gl-matrix/esm/vec4.js","../../node_modules/@math.gl/core/dist/esm/classes/matrix4.js","../../src/game/GameObject.js","../../src/game/Entity.js","../../src/game/Camera.js","../../src/game/ShaderProgram.js","../../src/game/SpriteShaderProgram.js","../../src/game/Input.js","../../src/game/Time.js","../../src/game/World.js","../../src/game/CollisionBoxShaderProgram.js","../../src/game/DebugCollisionRenderer.js","../../src/game/AABB.js","../../src/game/Texture.js","../../src/game/Sprite.js","../../src/mygame/FlappyBird.js","../../src/mygame/FlappyBirdWorld.js","../../src/Canvas.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"math.gl assertion \".concat(message));\n  }\n}\n//# sourceMappingURL=assert.js.map","import assert from './assert';\nconst RADIANS_TO_DEGREES = 1 / Math.PI * 180;\nconst DEGREES_TO_RADIANS = 1 / 180 * Math.PI;\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = false;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\nexport { config };\nexport function configure(options = {}) {\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n\n  return config;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {\n  precision = config.precision || 4\n} = {}) {\n  value = round(value);\n  return \"\".concat(parseFloat(value.toPrecision(precision)));\n}\nexport function isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(...array);\n}\n\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    result = result || duplicateArray(value);\n\n    for (let i = 0; i < result.length && i < value.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n\n    return result;\n  }\n\n  return func(value);\n}\n\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\nexport function radians(degrees, result) {\n  return map(degrees, degrees => degrees * DEGREES_TO_RADIANS, result);\n}\nexport function degrees(radians, result) {\n  return map(radians, radians => radians * RADIANS_TO_DEGREES, result);\n}\nexport function sin(radians) {\n  return map(radians, angle => Math.sin(angle));\n}\nexport function cos(radians) {\n  return map(radians, angle => Math.cos(angle));\n}\nexport function tan(radians) {\n  return map(radians, angle => Math.tan(angle));\n}\nexport function asin(radians) {\n  return map(radians, angle => Math.asin(angle));\n}\nexport function acos(radians) {\n  return map(radians, angle => Math.acos(angle));\n}\nexport function atan(radians) {\n  return map(radians, angle => Math.atan(angle));\n}\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n\n  return t * b + (1 - t) * a;\n}\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n\n  try {\n    if (a === b) {\n      return true;\n    }\n\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < a.length; ++i) {\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n\n    if (Number.isFinite(a) && Number.isFinite(b)) {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n    }\n\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\nexport function withEpsilon(EPSILON, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = EPSILON;\n  let value;\n\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n\n  return value;\n}\n//# sourceMappingURL=common.js.map","function _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    var instance = Reflect.construct(cls, Array.from(arguments));\n    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n    return instance;\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nimport { config, formatValue, equals, isArray } from '../../lib/common';\nimport assert from '../../lib/assert';\nexport default class MathArray extends _extendableBuiltin(Array) {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  from(arrayOrObject) {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n\n    return this.check();\n  }\n\n  to(arrayOrObject) {\n    if (arrayOrObject === this) {\n      return this;\n    }\n\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target) {\n    return target ? this.to(target) : this;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n\n    return \"\".concat(opts.printTypes ? this.constructor.name : '', \"[\").concat(string, \"]\");\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n\n    return this.check();\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n\n    return this.check();\n  }\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(scalar) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n\n    return this.check();\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n\n    return this.check();\n  }\n\n  multiplyByScalar(scalar) {\n    return this.scale(scalar);\n  }\n\n  get elements() {\n    return this;\n  }\n\n  check() {\n    if (config.debug && !this.validate()) {\n      throw new Error(\"math.gl: \".concat(this.constructor.name, \" some fields set to invalid numbers'\"));\n    }\n\n    return this;\n  }\n\n  validate() {\n    let valid = this.length === this.ELEMENTS;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n\n    return valid;\n  }\n\n}\n//# sourceMappingURL=math-array.js.map","import { config } from './common';\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(\"Invalid number \".concat(value));\n  }\n\n  return value;\n}\nexport function checkVector(v, length, callerName = '') {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(\"math.gl: \".concat(callerName, \" some fields set to invalid numbers'\"));\n  }\n\n  return v;\n}\nconst map = {};\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    console.warn(\"\".concat(method, \" has been removed in version \").concat(version, \", see upgrade guide for more information\"));\n  }\n}\n//# sourceMappingURL=validators.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\nexport default class Vector extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  copy(vector) {\n    assert(false);\n    return this;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return this.len();\n  }\n\n  lengthSquared() {\n    let length = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n\n    return length;\n  }\n\n  magnitudeSquared() {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n\n    return checkNumber(product);\n  }\n\n  normalize() {\n    const length = this.magnitude();\n\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n\n    return this.check();\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n\n}\n//# sourceMappingURL=vector.js.map","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","export function vec2_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\nexport function vec3_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\nexport function vec3_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\nexport function vec4_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\nexport function vec4_transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n//# sourceMappingURL=gl-matrix-extras.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0));\n  }\n\n  constructor(x = 0, y = 0, z = 0) {\n    super(-0, -0, -0);\n\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 3;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n}\n//# sourceMappingURL=vector3.js.map","import MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport { config } from '../../lib/common';\nimport assert from '../../lib/assert';\nexport default class Matrix extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  get RANK() {\n    assert(false);\n    return 0;\n  }\n\n  toString() {\n    let string = '[';\n\n    if (config.printRowMajor) {\n      string += 'row-major:';\n\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += \" \".concat(this[col * this.RANK + row]);\n        }\n      }\n    } else {\n      string += 'column-major:';\n\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += \" \".concat(this[i]);\n      }\n    }\n\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row, col) {\n    return col * this.RANK + row;\n  }\n\n  getElement(row, col) {\n    return this[col * this.RANK + row];\n  }\n\n  setElement(row, col, value) {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n\n  getColumn(columnIndex, result = new Array(this.RANK).fill(-0)) {\n    const firstIndex = columnIndex * this.RANK;\n\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n\n    return result;\n  }\n\n  setColumn(columnIndex, columnVector) {\n    const firstIndex = columnIndex * this.RANK;\n\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n\n    return this;\n  }\n\n}\n//# sourceMappingURL=matrix.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import { checkVector, deprecated } from '../lib/validators';\nimport Matrix from './base/matrix';\nimport { vec2_transformMat4AsVector, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\nconst constants = {};\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n    return constants.ZERO;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  get RANK() {\n    return 4;\n  }\n\n  constructor(array) {\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result) {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  frustum({\n    left,\n    right,\n    bottom,\n    top,\n    near,\n    far\n  }) {\n    if (far === Infinity) {\n      Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n\n    return this.check();\n  }\n\n  static _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = 2.0 * near / (right - left);\n    const column1Row1 = 2.0 * near / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1.0;\n    const column2Row3 = -1.0;\n    const column3Row2 = -2.0 * near;\n    result[0] = column0Row0;\n    result[1] = 0.0;\n    result[2] = 0.0;\n    result[3] = 0.0;\n    result[4] = 0.0;\n    result[5] = column1Row1;\n    result[6] = 0.0;\n    result[7] = 0.0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0.0;\n    result[13] = 0.0;\n    result[14] = column3Row2;\n    result[15] = 0.0;\n    return result;\n  }\n\n  lookAt(eye, center, up) {\n    if (arguments.length === 1) {\n      ({\n        eye,\n        center,\n        up\n      } = eye);\n    }\n\n    center = center || [0, 0, 0];\n    up = up || [0, 1, 0];\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  ortho({\n    left,\n    right,\n    bottom,\n    top,\n    near = 0.1,\n    far = 500\n  }) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  orthographic({\n    fovy = 45 * Math.PI / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY);\n    const right = top * aspect;\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  perspective({\n    fovy = undefined,\n    fov = 45 * Math.PI / 180,\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  getScale(result = [-0, -0, -0]) {\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    return result;\n  }\n\n  getTranslation(result = [-0, -0, -0]) {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  getRotation(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  getRotationMatrix3(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    return this.check();\n  }\n\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    return this.check();\n  }\n\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx).rotateY(ry).rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  transform(vector, result) {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformAsPoint(vector, result) {\n    const {\n      length\n    } = vector;\n\n    switch (length) {\n      case 2:\n        result = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  transformAsVector(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n\n  transformPoint(vector, result) {\n    deprecated('Matrix4.transformPoint', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix4.transformVector', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformDirection(vector, result) {\n    deprecated('Matrix4.transformDirection', '3.0');\n    return this.transformAsVector(vector, result);\n  }\n\n}\n//# sourceMappingURL=matrix4.js.map","export class GameObject\n{\n    constructor() \n    {\n        this.Start = this.Start.bind(this);\n        this.Update = this.Update.bind(this);\n        this.Render = this.Render.bind(this);\n    }\n\n    Start() {}\n    Update() {}\n    Render() {}\n}","import { Matrix4, Vector3 } from \"@math.gl/core\";\nimport { GameObject } from \"./GameObject\";\n\nexport class Entity extends GameObject\n{\n    constructor() \n    {\n        super();\n\n        this.world = null;\n        this.parent = null;\n\n        /**\n         * @type WebGLRenderingContext\n         */\n        this.glContext = null;\n        this.program = null;\n\n        this.verticies = [];\n        this.vertexBuffer = null;\n        this.vertexAttrLocation = null;\n\n        this.indices = [];\n        this.indexBuffer = null;\n\n        this.mvpUniformLocation = null;\n\n        this.position = new Vector3();\n        this.angle = 0.0;\n        this.scale = new Vector3(1, 1, 1);\n\n        this.transform = new Matrix4().identity();\n\n        this.zOrder = 0;\n        \n        this.SetWorld = this.SetWorld.bind(this);\n        this.InitMesh = this.InitMesh.bind(this);\n        this.Translate = this.Translate.bind(this);\n        this.TranslateX = this.TranslateX.bind(this);\n        this.TranslateY = this.TranslateY.bind(this);\n        this.Rotate = this.Rotate.bind(this);\n        this.Scale = this.Scale.bind(this);\n        this.ScaleX = this.ScaleX.bind(this);\n        this.ScaleY = this.ScaleY.bind(this);\n        this.SetZOrder = this.SetZOrder.bind(this);\n        this.CalculateTransform = this.CalculateTransform.bind(this);\n        this._SetRenderAttributes = this._SetRenderAttributes.bind(this);\n        this._Draw = this._Draw.bind(this);\n        this.Release = this.Release.bind(this);\n    }\n\n    SetWorld(newWorld)\n    {\n        this.world = newWorld;\n    }\n\n    SetParent(newParent)\n    {\n        this.parent = newParent;\n    }\n\n    InitMesh(glContext)\n    {\n        // Initialize mesh and render data;\n        this.glContext = glContext;\n\n        if (this.verticies.length && this.indices.length && this.program)\n        {\n            // Set vertex buffer\n            this.vertexAttrLocation = this.glContext.getAttribLocation(this.program, \"vPosition\");\n    \n            this.vertexBuffer = this.glContext.createBuffer();\n            this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.vertexBuffer);\n            this.glContext.bufferData(this.glContext.ARRAY_BUFFER, new Float32Array(this.verticies), this.glContext.STATIC_DRAW);\n    \n            // Set index buffer\n            this.indexBuffer = this.glContext.createBuffer();\n            this.glContext.bindBuffer(this.glContext.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n            this.glContext.bufferData(this.glContext.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.indices), this.glContext.STATIC_DRAW);\n    \n            // Set MVP uniform location\n            this.mvpUniformLocation = this.glContext.getUniformLocation(this.program, \"MVP\");\n        }\n    }\n\n    Translate(newPosition)\n    {\n        if (newPosition.constructor == Vector3) throw new TypeError(\"newPosition is not Vector3!\");\n\n        this.position = newPosition;\n    }\n\n    TranslateX(newX)\n    {\n        this.position.x = newX;\n    }\n\n    TranslateY(newY)\n    {\n        this.position.y = newY;\n    }\n\n    Rotate(newAngle)\n    {\n        this.angle = newAngle;\n    }\n\n    Scale(newScale)\n    {\n        if (newScale.constructor == Vector3) throw new TypeError(\"newPosition is not Vector3!\");\n\n        this.scale = newScale;\n    }\n\n    ScaleX(newScaleX)\n    {\n        this.scale.x = newScaleX;   \n    }\n\n    ScaleY(newScaleY)\n    {\n        this.scale.y = newScaleY;\n    }\n\n    SetZOrder(newZOrder)\n    {\n        this.zOrder = newZOrder;\n    }\n\n    Start()\n    {\n        super.Start();\n    }\n\n    Update()\n    {\n        super.Update();\n    }\n\n    Render()\n    {\n        super.Render();\n\n        this._SetRenderAttributes();\n\n        this._Draw();\n    }\n\n    Release()\n    {\n        if (this.vertexBuffer)\n        {\n            this.glContext.deleteBuffer(this.vertexBuffer);\n        }\n\n        if (this.indexBuffer)\n        {\n            this.glContext.deleteBuffer(this.indexBuffer);\n        }\n\n        if (this.program)\n        {\n            this.glContext.deleteProgram(this.program);\n        }\n    }\n\n    _SetRenderAttributes()\n    {\n        if (this.program && this.glContext && this.world)\n        {\n            this.glContext.useProgram(this.program);\n\n            this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.vertexBuffer);\n            \n            this.glContext.enableVertexAttribArray(this.vertexAttrLocation);\n\n            const vertexSize = 3;\n\n            this.glContext.vertexAttribPointer(this.vertexAttrLocation, vertexSize, this.glContext.FLOAT, false, 0, 0);\n\n            const projMat = this.world.projectionMatrix.clone();\n            const viewMat = this.world.camera.CalculateTransform().clone();\n            const modelMat = this.CalculateTransform().clone();\n\n            const MVP = projMat.multiplyRight(viewMat.multiplyRight(modelMat));\n\n            this.glContext.uniformMatrix4fv(this.mvpUniformLocation, false, MVP);\n        }\n    }\n\n    _Draw()\n    {\n        if (this.program && this.glContext && this.world)\n        {\n            this.glContext.bindBuffer(this.glContext.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    \n            this.glContext.drawElements(this.glContext.TRIANGLES, this.indices.length, this.glContext.UNSIGNED_SHORT, 0);\n        }\n    }\n\n    CalculateTransform()\n    {\n        let newTransform = new Matrix4().identity();\n\n        newTransform = newTransform.translate(this.position);\n        newTransform = newTransform.rotateZ(this.angle);\n        newTransform = newTransform.scale(this.scale);\n\n        if (this.parent)\n        {\n            const parentTransform = this.parent.CalculateTransform().clone();\n\n            this.transform = parentTransform.multiplyRight(newTransform);\n        }\n        else\n        {\n            this.transform = newTransform;\n        }\n\n        return this.transform;\n    }\n}","import { Matrix4, Vector3 } from \"@math.gl/core\";\nimport { Entity } from \"./Entity\";\n\nexport class Camera extends Entity\n{\n    constructor()\n    {\n        super();\n\n        this.position.z = 2;\n        this.upVector = new Vector3(0, 1, 0);\n\n        this.viewMatrix = new Matrix4();\n\n        this.CalculateTransform = this.CalculateTransform.bind(this);\n    }\n\n    CalculateTransform()\n    {\n        this.viewMatrix = (new Matrix4().rotateZ(this.angle)).invert().multiplyRight(new Matrix4().translate(this.position).invert());\n\n        return this.viewMatrix;\n    }\n}","export class ShaderProgram\n{\n    constructor(glContext, vertexShaderStr, fragShaderStr)\n    {\n        /**\n         * @type WebGLRenderingContext\n         */\n        this.glContext = glContext;\n\n        this.rawVertexShader = vertexShaderStr;\n        this.rawFragShader = fragShaderStr;\n\n        this.vertexShader = null;\n        this.fragShader = null;\n        this.program = null;\n\n        this.CompileShader = this.CompileShader.bind(this);\n        this.CreateShader = this.CreateShader.bind(this);\n        this.CreateProgram = this.CreateProgram.bind(this);\n    }\n\n    CompileShader()\n    {\n        this.vertexShader = this.CreateShader(this.glContext.VERTEX_SHADER, this.rawVertexShader);\n        this.fragShader = this.CreateShader(this.glContext.FRAGMENT_SHADER, this.rawFragShader);\n\n        this.program = this.CreateProgram();\n    }\n\n    CreateShader(type, source)\n    {\n        let shader = this.glContext.createShader(type);\n        this.glContext.shaderSource(shader, source);\n        this.glContext.compileShader(shader);\n        \n        let success = this.glContext.getShaderParameter(shader, this.glContext.COMPILE_STATUS);\n        if (success) \n        {\n            return shader;\n        }\n        \n        console.log(this.glContext.getShaderInfoLog(shader));\n        this.glContext.deleteShader(shader);\n    }\n\n    CreateProgram()\n    {\n        let program = this.glContext.createProgram();\n\n        this.glContext.attachShader(program, this.vertexShader);\n        this.glContext.attachShader(program, this.fragShader);\n        this.glContext.linkProgram(program);\n\n        let success = this.glContext.getProgramParameter(program, this.glContext.LINK_STATUS);\n        if (success) \n        {\n            return program;\n        }\n        \n        console.log(this.glContext.getProgramInfoLog(program));\n        this.glContext.deleteProgram(program);\n    }\n}","import { ShaderProgram } from \"./ShaderProgram\";\n\nexport class SpriteShaderProgram extends ShaderProgram\n{\n    constructor(glContext)\n    {\n        super(glContext, \"\", \"\");\n\n        this.rawVertexShader = `\n        attribute vec4 vPosition;\n        attribute vec2 vTexCoord;\n\n        uniform mat4 MVP;\n\n        varying vec2 fTexCoord;\n        \n        void main() {\n        \n            gl_Position = MVP * vPosition;\n\n            fTexCoord = vTexCoord;\n        }\n        `;\n\n        this.rawFragShader = `\n        precision mediump float;\n\n        varying vec2 fTexCoord;\n        uniform sampler2D texture;\n        \n        void main() {\n            gl_FragColor = texture2D(texture, fTexCoord);\n        }\n        `; \n\n        this.CompileShader();\n    }\n}","export class Input\n{\n    constructor()\n    {\n        this.isMouseClick = false;\n        this.isRightMouseClick = false;\n        this.keyHold = {};\n\n        this.Initailize = this.Initailize.bind(this);\n        this.Update = this.Update.bind(this);\n    }\n\n    Initailize()\n    {\n        // Prevent right click contextmenu\n        window.addEventListener(\"contextmenu\", (e) => {\n            e.preventDefault();\n        });\n      \n        window.addEventListener(\"mousedown\", (e) => {\n            if (e.button == 0)\n            {\n                this.isMouseClick = true;\n            }\n            else if (e.button == 2)\n            {\n                this.isRightMouseClick = true;\n            }\n        });\n      \n        window.addEventListener(\"mouseup\", (e) => {\n            if (e.button == 0)\n            {\n                this.isMouseClick = false;\n            }\n            else if (e.button == 2)\n            {\n                this.isRightMouseClick = false;\n            }\n        });\n    \n        window.addEventListener(\"keydown\", (e) => {\n            this.keyHold[e.key] = true;\n        });\n    \n        window.addEventListener(\"keyup\", (e) => {\n            this.keyHold[e.key] = false;\n        });\n    }\n\n    Update() { }\n\n    IsMouseClick(right = false)\n    {\n        return right ? this.isRightMouseClick : this.isMouseClick;\n    }\n\n    IsKeyDown(key)\n    {\n        if (!this.keyHold[key])\n        {\n            return false;\n        }\n\n        return this.keyHold[key];\n    }\n}","export class Time\n{\n    constructor()\n    {\n        this.previousTime = 0;\n        this.deltaTime = 0;\n\n        this.Initailize = this.Initailize.bind(this);\n        this.Update = this.Update.bind(this);\n    }\n\n    Initailize()\n    {\n        this.previousTime = Date.now();\n        this.deltaTime = 0;\n    }\n\n    Update()\n    {\n        this.deltaTime = (Date.now() - this.previousTime) / 1000;\n\n        this.previousTime = Date.now();\n    }\n}","import { Matrix4 } from \"@math.gl/core\";\nimport { Camera } from \"./Camera\";\nimport { GameObject } from \"./GameObject\";\nimport { Input } from \"./Input\";\nimport { Time } from \"./Time\";\n\nexport class World extends GameObject\n{\n    constructor()\n    {\n        super();\n\n        this.time = new Time();\n        this.input = new Input();\n\n        this.stopTime = false;\n\n        this.projectionMatrix = null;\n\n        this.glContext = null;\n\n        this.entities = [];\n        this.camera = new Camera();\n\n        this.AddEntity = this.AddEntity.bind(this);\n        this.RemoveEntity = this.RemoveEntity.bind(this);\n        this.SortEntities = this.SortEntities.bind(this);\n        this.StopTime = this.StopTime.bind(this);\n        this.ResumeTime = this.ResumeTime.bind(this);\n    }\n\n    SetUp(glContext)\n    {\n        this.glContext = glContext;\n\n        this.projectionMatrix = new Matrix4().orthographic({\n            fovy : 90 * (Math.PI / 180),\n            aspect : this.glContext.canvas.width / this.glContext.canvas.height,\n            focalDistance : 1,\n            near : 0.1,\n            far : 100    \n        });\n\n        this.time.Initailize();\n        this.input.Initailize();\n    }\n\n    Start()\n    {\n        super.Start();\n    }\n\n    Update()\n    {\n        super.Update();\n\n        if (!this.stopTime)\n        {\n            this.time.Update();\n        }\n\n        this.input.Update();\n\n        for (const entity of this.entities) \n        {\n            entity.Update();    \n        }\n    }\n\n    Render()\n    {\n        super.Render();\n\n        this.glContext.viewport(0, 0, this.glContext.canvas.width, this.glContext.canvas.height);\n\n        this.glContext.clearColor(0, 0, 0, 0);\n        this.glContext.clear(this.glContext.COLOR_BUFFER_BIT);\n        this.glContext.enable(this.glContext.BLEND);\n        this.glContext.blendFunc(this.glContext.SRC_ALPHA, this.glContext.ONE_MINUS_SRC_ALPHA);\n\n        this.glContext.enable(this.glContext.CULL_FACE);\n\n        for (const entity of this.entities) \n        {\n            entity.Render();    \n        }\n    }\n\n    AddEntity(newEntity)\n    {\n        newEntity.SetWorld(this);\n        newEntity.InitMesh(this.glContext);\n\n        this.entities.push(newEntity);\n\n        this.SortEntities();\n    }\n\n    RemoveEntity(entity)\n    {\n        let index = this.entities.findIndex((element) => element == entity);\n\n        if (index > -1)\n        {\n            this.entities.splice(index, 1);\n        }\n\n        entity.Release();\n    }\n\n    SortEntities()\n    {\n        this.entities.sort((a, b) => {\n            if (a.zOrder < b.zOrder) \n            {\n                return -1;\n            }\n\n            if (a.zOrder > b.zOrder) \n            {\n                return 1;\n            }\n            \n            return 0;\n        });\n    }\n\n    StopTime()\n    {\n        this.stopTime = true;\n        this.time.deltaTime = 0;\n    }\n\n    ResumeTime()\n    {\n        this.stopTime = false;\n    }\n}","import { ShaderProgram } from \"./ShaderProgram\";\n\nexport class CollisionBoxShaderProgram extends ShaderProgram\n{\n    constructor(glContext)\n    {\n        super(glContext, \"\", \"\");\n\n        this.rawVertexShader = `\n        attribute vec4 vPosition;\n\n        uniform mat4 MVP;\n\n        void main() {\n            gl_Position = MVP * vPosition;\n        }\n        `;\n\n        this.rawFragShader = `\n        precision mediump float;\n\n        void main() {\n            gl_FragColor = vec4(1, 0.6, 0.4, 0.3);\n        }\n        `; \n\n        this.CompileShader();\n    }\n}","import { CollisionBoxShaderProgram } from \"./CollisionBoxShaderProgram\";\nimport { Entity } from \"./Entity\";\n\nexport class DebugCollisionRenderer extends Entity\n{\n    constructor(collisionBox)\n    {\n        super();\n\n        this.verticies = [\n\t\t\t0.5, 0.5, 0, // right top\n\t\t\t0.5, -0.5, 0, // right bottom\n\t\t\t-0.5, 0.5, 0, // left top\n\t\t\t-0.5, -0.5, 0 // left bottom\n        ];\n\t\tthis.indices = [2, 1, 0, 2, 3, 1];\n\n        this.collisionBox = collisionBox;\n    }\n\n    InitMesh(glContext)\n    {\n        this.program = new CollisionBoxShaderProgram(glContext).program;\n\n        super.InitMesh(glContext);\n\n        this.zOrder = 1000;\n    }\n\n    Render()\n    {\n        const {scaledX1, scaledX2, scaledY1, scaledY2} = this.collisionBox.GetScaledPoints();\n        this.verticies = [\n\t\t\tscaledX2, scaledY2, 0, // right top\n\t\t\tscaledX2, scaledY1, 0, // right bottom\n\t\t\tscaledX1, scaledY2, 0, // left top\n\t\t\tscaledX1, scaledY1, 0 // left bottom\n        ];\n\n        this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.vertexBuffer);\n        this.glContext.bufferData(this.glContext.ARRAY_BUFFER, new Float32Array(this.verticies), this.glContext.STATIC_DRAW);\n\n        this._SetRenderAttributes();\n\n        this._Draw();\n    }\n}","import { Vector3 } from \"@math.gl/core\";\nimport { DebugCollisionRenderer } from \"./DebugCollisionRenderer\";\n\nexport class AABB\n{\n    constructor(entity, x, y, width, height, scale = null)\n    {\n        this.entity = entity;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n\n        /**\n         * @type {Vector3}\n         */\n        this.scale = scale || new Vector3(1, 1, 1);\n\n        this.IsCollide = this.IsCollide.bind(this);\n        this.GetScaledPoints = this.GetScaledPoints.bind(this);\n\n        this.debugEntity = new DebugCollisionRenderer(this);\n    }\n\n    /**\n     * \n     * @param {AABB} other \n     */\n    IsCollide(other)\n    {\n        const box = this.GetScaledPoints();\n        const otherBox = other.GetScaledPoints();\n\n        const scaledX1 = box.scaledX1;\n        const scaledX2 = box.scaledX2;\n        const scaledY1 = box.scaledY1;\n        const scaledY2 = box.scaledY2;\n\n        const otherScaledX1 = otherBox.scaledX1;\n        const otherScaledX2 = otherBox.scaledX2;\n        const otherScaledY1 = otherBox.scaledY1;\n        const otherScaledY2 = otherBox.scaledY2;\n\n        if (\n            scaledX1 <= otherScaledX2 && scaledX2 >= otherScaledX1 &&\n            scaledY1 <= otherScaledY2 && scaledY2 >= otherScaledY1\n        )\n        {\n            return true;\n        }\n\n        return false;\n    }\n\n    GetScaledPoints()\n    {\n        const scaledX1 = this.entity.position[0] + (this.x * this.scale[0]);\n        const scaledX2 = scaledX1 + (this.width * this.scale[0]);\n\n        const scaledY1 = this.entity.position[1] + (this.y * this.scale[1]);\n        const scaledY2 = scaledY1 + (this.height * this.scale[1]);\n\n        return {scaledX1, scaledX2, scaledY1, scaledY2};\n    }\n}","export class Texture\n{\n    constructor(imgSrc)\n    {\n        this.texture = null;\n\n        this.image = null;\n        this.src = imgSrc;\n        this.imageLoadHanlder = null;\n\n        this.width = 0;\n        this.height = 0;\n\n        this.glContext = null;\n\n        this.InitTexture = this.InitTexture.bind(this);\n        this.BindTexture = this.BindTexture.bind(this);\n    }\n\n    InitTexture(glContext)\n    {\n        this.glContext = glContext;\n\n        this.texture = this.glContext.createTexture();\n        this.glContext.bindTexture(this.glContext.TEXTURE_2D, this.texture);\n\n        // Create temporary image\n        this.glContext.texImage2D(\n            this.glContext.TEXTURE_2D,\n            0,\n            this.glContext.RGBA,\n            1,\n            1,\n            0,\n            this.glContext.RGBA,\n            this.glContext.UNSIGNED_BYTE,\n            new Uint8Array([63, 16, 127, 86])\n        );\n\n        this.image = new Image();\n        this.image.src = this.src;\n        this.image.addEventListener(\"load\", () => {\n            this.width = this.image.width;\n            this.height = this.image.height;\n\n            this.glContext.bindTexture(this.glContext.TEXTURE_2D, this.texture);\n\n            this.glContext.pixelStorei(this.glContext.UNPACK_FLIP_Y_WEBGL, true);\n\n            this.glContext.texImage2D(\n                this.glContext.TEXTURE_2D, \n                0, \n                this.glContext.RGBA, \n                this.glContext.RGBA, \n                this.glContext.UNSIGNED_BYTE, \n                this.image\n            );\n\n            const IsPowerOfTwo = (x) => {\n                return (x & (x - 1)) == 0;\n            }\n\n            if ( IsPowerOfTwo(this.width) && IsPowerOfTwo(this.height)) \n            {\n                // If texture power of two\n                this.glContext.generateMipmap(this.glContext.TEXTURE_2D);\n\n                this.glContext.texParameteri(this.glContext.TEXTURE_2D, this.glContext.TEXTURE_MIN_FILTER, this.glContext.NEAREST);\n                this.glContext.texParameteri(this.glContext.TEXTURE_2D, this.glContext.TEXTURE_MAG_FILTER, this.glContext.NEAREST);\n            }\n            else\n            {\n                // If texture not power of two\n                this.glContext.texParameteri(this.glContext.TEXTURE_2D, this.glContext.TEXTURE_MAG_FILTER, this.glContext.LINEAR);\n                this.glContext.texParameteri(this.glContext.TEXTURE_2D, this.glContext.TEXTURE_MIN_FILTER, this.glContext.LINEAR);\n    \n                this.glContext.texParameteri(this.glContext.TEXTURE_2D, this.glContext.TEXTURE_WRAP_S, this.glContext.CLAMP_TO_EDGE);\n                this.glContext.texParameteri(this.glContext.TEXTURE_2D, this.glContext.TEXTURE_WRAP_T, this.glContext.CLAMP_TO_EDGE);\n            }\n\n            if (this.imageLoadHanlder)\n            {\n                this.imageLoadHanlder();\n            }\n        });\n    }\n\n    BindTexture()\n    {\n        this.glContext.bindTexture(this.glContext.TEXTURE_2D, this.texture);\n    }\n\n    Release()\n    {\n        if (this.texture)\n        {\n            this.glContext.deleteTexture(this.texture);\n        }\n    }\n}","import { AABB } from \"./AABB\";\nimport { Entity } from \"./Entity\";\nimport { SpriteShaderProgram } from \"./SpriteShaderProgram\"\nimport { Texture } from \"./Texture\";\n\nexport class Sprite extends Entity\n{\n    constructor(imgSrc)\n    {\n        super();\n\n        this.verticies = [\n\t\t\t0.5, 0.5, 0, // right top\n\t\t\t0.5, -0.5, 0, // right bottom\n\t\t\t-0.5, 0.5, 0, // left top\n\t\t\t-0.5, -0.5, 0 // left bottom\n        ];\n\t\tthis.indices = [2, 1, 0, 2, 3, 1];\n\n        this.texCoord = [\n            1, 1,\n            1, 0,\n            0, 1,\n            0, 0\n        ];\n        this.texCoordBuffer = null;\n        this.texCoordAttrLocation = null;\n\n        this.textureUniformLocation = null;\n        this.texture = new Texture(imgSrc);\n\n        this.animTimer = 0;\n        this.curAnimIndex = 0;\n        this.animDelay = 0;\n        this.animationFrame = [];\n\n        this.collisionBox = new AABB(this, -0.5, -0.5, 1, 1, this.scale);\n        this.debugCollisionBox = false;\n    }\n\n    InitMesh(glContext)\n    {\n        this.program = new SpriteShaderProgram(glContext).program;\n\n        super.InitMesh(glContext);\n\n        this.texCoordAttrLocation = this.glContext.getAttribLocation(this.program, \"vTexCoord\");\n\n        this.texCoordBuffer = this.glContext.createBuffer();\n        this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.texCoordBuffer);\n        this.glContext.bufferData(this.glContext.ARRAY_BUFFER, new Float32Array(this.texCoord), this.glContext.STATIC_DRAW);\n\n        this.texture.imageLoadHanlder = () => {\n            const imageWidth = this.texture.width;\n            const imageHeight = this.texture.height;\n            const imageRatio = imageWidth / imageHeight;\n\n            // Move vertex to correct position\n            let w = ((imageWidth / 2) / imageWidth) * imageRatio;\n            let h = (imageHeight / 2) / imageHeight;\n\n            this.verticies = [\n                w, h, 0, // right top\n                w, -h, 0, // right bottom\n                -w, h, 0, // left top\n                -w, -h, 0 // left bottom\n            ];\n\n            this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.vertexBuffer);\n            this.glContext.bufferData(this.glContext.ARRAY_BUFFER, new Float32Array(this.verticies), this.glContext.STATIC_DRAW);\n\n            // Resetting collision box\n            this.collisionBox.x = -w;\n            this.collisionBox.y = -h;\n            this.collisionBox.width = 2 * w;\n            this.collisionBox.height = 2 * h;\n        };\n        this.texture.InitTexture(glContext);\n\n        this.textureUniformLocation = this.glContext.getUniformLocation(this.program, \"texture\");\n\n        // Init for debugging collision box\n        if (this.debugCollisionBox)\n        {\n            this.collisionBox.debugEntity.InitMesh(this.glContext);\n            this.world.AddEntity(this.collisionBox.debugEntity);\n        }\n    }\n\n    AddAnimation(srcList, delayPerFrame)\n    {\n        this.animDelay = delayPerFrame;\n\n        for (const src of srcList) \n        {\n            const frame = new Texture(src);\n            frame.InitTexture(this.glContext);\n\n            this.animationFrame.push(frame);\n        }\n    }\n\n    Update()\n    {\n        super.Update();\n\n        if (this.world)\n        {\n            if (this.animationFrame.length)\n            {\n                this.animTimer += this.world.time.deltaTime;\n                if (this.animTimer > this.animDelay)\n                {\n                    this.animTimer = 0;\n                    this.curAnimIndex = (this.curAnimIndex + 1) % this.animationFrame.length;\n                }\n            }\n        }\n    }\n\n    Render()\n    {\n        this._SetRenderAttributes();\n\n        const texCoordSize = 2;\n\n        this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.texCoordBuffer);\n        this.glContext.vertexAttribPointer(this.texCoordAttrLocation, texCoordSize, this.glContext.FLOAT, false, 0, 0);\n        this.glContext.enableVertexAttribArray(this.texCoordAttrLocation);\n\n        this.glContext.activeTexture(this.glContext.TEXTURE0);\n        if (this.animationFrame.length)\n        {\n            const currentFrame = this.animationFrame[this.curAnimIndex];\n            currentFrame.BindTexture();\n        }\n        else\n        {\n            this.texture.BindTexture();\n        }\n        this.glContext.uniform1i(this.textureUniformLocation, 0);\n\n        this._Draw();\n    }\n\n    Release()\n    {\n        super.Release();\n\n        if (this.texCoordBuffer)\n        {\n            this.glContext.deleteBuffer(this.texCoordBuffer);\n        }\n\n        if (this.texture)\n        {\n            this.texture.Release();\n        }\n\n        if(this.animationFrame.length)\n        {\n            for (const frame of this.animationFrame) \n            {\n                frame.Release();\n            }\n        }\n    }\n\n    Scale(newScale)\n    {\n        super.Scale(newScale);\n\n        this.collisionBox.scale = this.scale;\n    }\n\n    ScaleX(newScaleX)\n    {\n        super.ScaleX(newScaleX);\n\n        this.collisionBox.scale = this.scale;\n    }\n\n    ScaleY(newScaleY)\n    {\n        super.ScaleY(newScaleY);\n\n        this.collisionBox.scale = this.scale;\n    }\n}","import { Vector3 } from \"@math.gl/core\";\nimport { Sprite } from \"../game\";\n\nexport class FlappyBird extends Sprite\n{\n    constructor()\n    {\n        // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n        function getRandomInt(min, max) {\n            min = Math.ceil(min);\n            max = Math.floor(max);\n            return Math.floor(Math.random() * (max - min)) + min; //최댓값은 제외, 최솟값은 포함\n        }\n        let birdColor = getRandomInt(0, 3);\n\n        super(`./images/bird_${birdColor}_1.png`);\n        \n        this.birdColor = birdColor;\n        \n        this.velocity = new Vector3(0, 0, 0);\n        this.gravity = -4;\n        this.jumpPower = 3;\n        this.canJump = true;\n    }\n\n    InitMesh(glContext)\n    {\n        super.InitMesh(glContext);\n\n        this.Scale([0.1, 0.1, 0.1]);\n\n        this.AddAnimation([\n            `./images/bird_${this.birdColor}_1.png`,\n            `./images/bird_${this.birdColor}_2.png`,\n            `./images/bird_${this.birdColor}_3.png`,\n        ], 0.05);\n    }\n\n    Update()\n    {\n        super.Update();\n\n        // Update Bird velocity\n        this.velocity.y += (this.gravity * this.world.time.deltaTime);\n\n        // Update Bird jump\n        if ( (this.world.input.IsMouseClick() || this.world.input.IsKeyDown(\"Enter\") || this.world.input.IsKeyDown(\" \")) && this.canJump )\n        {\n            if (this.velocity.y > (this.jumpPower / 10))\n            {\n                const powerDispersion = ((this.jumpPower / 10) / this.velocity.y);\n\n                this.velocity.y += (this.jumpPower * powerDispersion);\n            }\n            else\n            {\n                this.velocity.y += this.jumpPower;\n            }\n\n            this.canJump = false;\n        }\n        else if (!(this.world.input.IsMouseClick() || this.world.input.IsKeyDown(\"Enter\") || this.world.input.IsKeyDown(\" \")))\n        {\n            this.canJump = true;\n        }\n\n        // Update bird position;\n        this.TranslateY(this.position.y + (this.velocity.y * this.world.time.deltaTime));\n\n        // Update Bird rotation;\n        let angle = this.Lerp(-(Math.PI/3), (Math.PI/3), this.velocity.y);\n        angle = Math.min((Math.PI/3), Math.max(-(Math.PI/3), angle));\n\n        this.Rotate(angle);\n    }\n\n    Lerp (start, end, step)\n    {\n        return (1 - step) * start + (step * end);\n    }\n}","import { Sprite } from \"../game\";\nimport { World } from \"../game/World\";\nimport { FlappyBird } from \"./FlappyBird\";\n\nexport class FlappyBirdWorld extends World\n{\n    constructor()\n    {\n        super();\n\n        this.pipes = [];\n        this.pipeSpawnHandler = null;\n        this.pipeSpawnDelay = 2500;\n\n        this.backgroundSprite = new Sprite(\"./images/background_0.png\");\n        this.grounds = [\n            new Sprite(\"./images/ground.png\"),\n            new Sprite(\"./images/ground.png\"),\n            new Sprite(\"./images/ground.png\"),\n        ]\n\n        this.bird = new FlappyBird();\n\n        this.gameover = false;\n        this.score = 0;\n\n        this.PushPipe = this.PushPipe.bind(this);\n    }\n\n    SetUp(glContext)\n    {\n        super.SetUp(glContext);\n\n\t\tthis.backgroundSprite.Scale([2, 2, 2]);\n\t\tthis.AddEntity(this.backgroundSprite);\n\n        this.backgroundSprite.AddAnimation([\n            \"./images/background_0.png\",\n            \"./images/background_1.png\",\n        ], 10);\n\n        for (let index = 0; index < this.grounds.length; index++)\n        {\n            this.grounds[index].Scale([0.4, 0.4, 0.4]);\n            this.grounds[index].TranslateY(-1.05);\n            this.grounds[index].SetZOrder(10);\n\n            if (index > 0)\n            {\n                this.grounds[index].TranslateX(\n                    this.grounds[index - 1].position.x + \n                    1.1\n                );\n            }\n\n            this.AddEntity(this.grounds[index]);\n        }\n\n        this.bird.TranslateX(-0.3);\n        this.AddEntity(this.bird);\n\n        this.pipeSpawnHandler = setInterval(this.PushPipe, this.pipeSpawnDelay);\n\n        this.PushPipe();\n    }\n\n    Update()\n    {\n        super.Update();\n\n        if (this.gameover)\n        {\n            this.StopTime();\n\n            clearInterval(this.pipeSpawnHandler);\n        }\n\n        // Move pipe\n        for (const pipe of this.pipes) \n        {\n            const pipeUp = pipe[0];\n            const pipeDown = pipe[1];\n\n            pipeUp.TranslateX(pipeUp.position.x - (0.4 * this.time.deltaTime));\n            pipeDown.TranslateX(pipeDown.position.x - (0.4 * this.time.deltaTime));\n\n            if (pipeUp.position.x < -1)\n            {\n                this.RemoveEntity(pipe[0]);\n                this.RemoveEntity(pipe[1]);\n\n                this.pipes.splice(0, 1);\n\n                this.score++;\n            }\n        }\n\n        // Ground movement update\n        for (let index = 0; index < this.grounds.length; index++)\n        {\n            this.grounds[index].TranslateX(this.grounds[index].position.x - (0.4 * this.time.deltaTime));\n\n            if (this.grounds[index].position.x < -1.1)\n            {\n                this.grounds[index].TranslateX(\n                    this.grounds[(index + 1) % this.grounds.length].position.x + \n                    1.1\n                );\n            }\n        }\n\n        // Check Bird is die\n        // If bird out of sight\n        if (this.bird.position.y < -1.05)\n        {\n            this.gameover = true;\n        }\n\n        // If bird collide with pipes\n        for (const pipe of this.pipes) \n        {\n            if (\n                pipe[0].collisionBox.IsCollide(this.bird.collisionBox) ||\n                pipe[1].collisionBox.IsCollide(this.bird.collisionBox)\n            )\n            {\n                this.gameover = true;\n            }\n        }\n    }\n\n    PushPipe()\n    {\n        const pipeColor = this.score > 10 ? 1 : 0;\n\n        let pipeUp = new Sprite(`./images/pipe_${pipeColor}_up.png`);\n        let pipeDown = new Sprite(`./images/pipe_${pipeColor}_down.png`);\n\n        pipeUp.Scale([1.5, 1.5, 1.5]);\n        pipeDown.Scale([1.5, 1.5, 1.5]);\n\n        pipeUp.TranslateX(1.5);\n        pipeDown.TranslateX(1.5);\n\n        const r = this.getRandomArbitrary(-0.3, 0.3);\n\n        pipeUp.TranslateY(-1.1 + r);\n        pipeDown.TranslateY(1.1 + r);\n\n        this.AddEntity(pipeUp);\n        this.AddEntity(pipeDown);\n\n        this.pipes.push([pipeUp, pipeDown]);\n    }\n\n    // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n    getRandomArbitrary(min, max) \n    {\n        return Math.random() * (max - min) + min;\n    }\n}","<script>\n    import { onMount } from \"svelte\";\n\timport { FlappyBirdWorld } from \"./mygame/FlappyBirdWorld\";\n\n    let canvas;\n\n\t// Fit to background image size\n\tconst canvasWidth = 143 * 2;\n\tconst canvasHeight = 256 * 2;\n\n\tconst myWorld = new FlappyBirdWorld();\n\n\tonMount(() => {\n\t\tconst webglContext = [ \"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\" ];\n\n\t\tlet glContext = null;\n\n\t\tfor (const context of webglContext) \n\t\t{\n\t\t\tglContext = canvas.getContext(context);\t\n\t\t\tif (glContext)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!glContext)\n\t\t{\n\t\t\tconsole.log(\"GL Context가 없음!\");\n\t\t}\n\n\t\tmyWorld.SetUp(glContext);\n\n\t\tconst render = () => {\n\t\t\tmyWorld.Update();\n\n\t\t\tmyWorld.Render();\n\n\t\t\tscore = myWorld.score;\n\t\t\tgameover = myWorld.gameover;\n\n\t\t\trequestAnimationFrame(render);\n\t\t}\n\n\t\trender();\n\t});\n\n\texport let score = 0;\n\texport let gameover = false;\n</script>\n\n<!-- {@debug} -->\n<div class=\"game-canvas\">\n\t<div class=\"control\">\n\t\t<p>Mouse Left Click or</p>\n\t\t<p>Keyboard Enter(Return) or</p>\n\t\t<p>Keyboard Space is Jump!</p>\n\t</div>\n    <canvas bind:this={canvas} width={canvasWidth} height={canvasHeight}></canvas>\n\t<div class=\"dummy\"></div>\n</div>\n\n<style>\n\tp {\n\t\tmargin: 0;\n\t}\n\n    .game-canvas {\n        display: flex;\n        width: 100%;\n        height: 100%;\n\n        text-align: center;\n\t\tjustify-content: center;\n\t\talign-items: center;\n    }\n\n    .game-canvas canvas {\n        border: 1px solid black;\n    }\n\n\t.control {\n\t\tposition: absolute;\n\t\tleft: 10%;\n\t}\n</style>","<script>\nimport { onMount } from \"svelte\";\n\timport Canvas from \"./Canvas.svelte\";\n\n\tlet maxScore = 0;\n\tlet score = 0;\n\tlet gameover = false;\n\n\tonMount(() => {\n\t\tmaxScore = parseInt(localStorage.getItem(\"maxScore\") || \"0\");\n\t});\n\n\t$: if (gameover && (maxScore < score)) {\n\t\tlocalStorage.setItem(\"maxScore\", score.toString());\n\t}\n</script>\n\n<main>\n\t<div class=\"max-score\">\n\t\t<p>Max Score : {maxScore}</p>\n\t</div>\n\t<div class=\"score\">\n\t\t<p>Score : {score}</p>\n\t</div>\n\t<div class=\"game-container\">\n\t\t<Canvas bind:score={score} bind:gameover={gameover}/>\n\t</div>\n\t{#if gameover}\n\t\t<div class=\"gameover\">\n\t\t\t<p>Gameover!</p>\n\t\t</div>\n\t{/if}\n</main>\n\n<style>\n\tp {\n\t\tmargin: 1rem;\n\t}\n\n\t.max-score {\n\t\ttext-align: center;\n\t\tfont-size: 1rem;\n\t}\n\n\t.score {\n\t\ttext-align: center;\n\t\tfont-size: 2rem;\n\t\tfont-weight: bold;\n\t}\n\n\t.gameover {\n\t\ttext-align: center;\n\t\tfont-size: 2rem;\n\t\tfont-weight: bold;\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: { }\n});\n\nexport default app;"],"names":["_classCallCheck","instance","Constructor","TypeError","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inherits","subClass","superClass","prototype","create","constructor","value","writable","configurable","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","call","assertThisInitialized","_getPrototypeOf","getPrototypeOf","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","minLen","arrayLikeToArray","n","toString","slice","name","from","test","_slicedToArray","isArray","arrayWithHoles","_i","_s","_e","_arr","_n","_d","next","done","push","err","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_toConsumableArray","arrayWithoutHoles","iter","iterableToArray","nonIterableSpread","_superPropBase","object","property","hasOwnProperty","_get","Reflect","get","target","receiver","base","superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","this","_defineProperties","props","descriptor","enumerable","defineProperty","key","_createClass","protoProps","staticProps","noop","run","fn","blank_object","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","document","createElement","text","data","createTextNode","space","attr","attribute","removeAttribute","getAttribute","setAttribute","children","childNodes","set_data","wholeText","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","transition_in","block","local","delete","bind","index","undefined","bound","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","options","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","hydrate","nodes","l","c","intro","SvelteComponent","$destroy","type","indexOf","splice","$$props","$$set","keys","assert","condition","message","concat","config","round","Math","EPSILON","formatValue","precision","parseFloat","ArrayBuffer","DataView","equals","epsilon","oldEpsilon","Number","MathArray","ELEMENTS","clone","copy","arrayOrObject","fromObject","fromArray","array","offset","check","to","toArray","toObject","toTarget","toFloat32Array","Float32Array","formatString","opts","string","exactEquals","negate","lerp","t","ai","min","vector","max","clamp","minVector","maxVector","vectors","subtract","scale","_scale","multiply","sub","setScalar","addScalar","subScalar","multiplyScalar","scalar","divideScalar","clampScalar","multiplyByScalar","elements","validate","valid","_extendableBuiltin","validateVector","v","checkNumber","checkVector","callerName","deprecated","method","version","console","out","Vector","x","y","lengthSquared","magnitude","magnitudeSquared","distance","mathArray","distanceSquared","dist","dot","product","normalize","divide","lengthSq","distanceTo","distanceToSquared","getComponent","setComponent","addVectors","subVectors","multiplyVectors","addScaledVector","ARRAY_TYPE","vec3_transformMat4AsVector","z","w","transformMat4","hypot","sqrt","glMatrix","vec","ORIGIN","constants","Vector3","debug","set","angle","ax","vec3","ay","az","bx","by","bz","mag","cosine","acos","cross","rotateX","radians","origin","rad","r","cos","sin","rotateY","rotateZ","transform","matrix4","transformAsPoint","transformAsVector","transformByMatrix3","matrix3","transformByMatrix2","matrix2","vec3_transformMat2","transformByQuaternion","quaternion","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","ZERO","Matrix","RANK","printRowMajor","row","col","getElementIndex","getElement","setElement","getColumn","columnIndex","result","firstIndex","setColumn","columnVector","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","perspective","fovy","aspect","near","far","nf","f","tan","Infinity","lookAt","eye","center","up","x0","x1","x2","y0","y1","y2","z0","z1","z2","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","identity","IDENTITY","INDICES","freeze","COL0ROW0","COL0ROW1","COL0ROW2","COL0ROW3","COL1ROW0","COL1ROW1","COL1ROW2","COL1ROW3","COL2ROW0","COL2ROW1","COL2ROW2","COL2ROW3","COL3ROW0","COL3ROW1","COL3ROW2","COL3ROW3","Matrix4","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","toRowMajor","fromQuaternion","xx","yx","yy","zx","zy","zz","wx","wy","wz","mat4","frustum","left","right","bottom","top","rl","tb","ortho","lr","bt","orthographic","PI","focalDistance","halfY","fov","determinant","getScale","getTranslation","getRotation","scaleResult","inverseScale0","inverseScale1","inverseScale2","getRotationMatrix3","transpose","invert","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiplyLeft","multiplyRight","s","rotateXYZ","rx","ry","rz","rotateAxis","axis","b12","b20","b21","b22","factor","translate","vec4","vec2","vec2_transformMat4AsVector","makeRotationX","makeTranslation","transformPoint","transformVector","transformDirection","_computeInfinitePerspectiveOffCenter","column0Row0","column1Row1","column2Row0","column2Row1","column3Row2","GameObject","Start","Update","Render","Entity","world","parent","glContext","program","verticies","vertexBuffer","vertexAttrLocation","indices","indexBuffer","mvpUniformLocation","position","zOrder","SetWorld","_this","InitMesh","Translate","TranslateX","TranslateY","Rotate","Scale","ScaleX","ScaleY","SetZOrder","CalculateTransform","_SetRenderAttributes","_Draw","Release","newWorld","newParent","getAttribLocation","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","getUniformLocation","newPosition","newX","newY","newAngle","newScale","newScaleX","newScaleY","newZOrder","deleteBuffer","deleteProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","projMat","projectionMatrix","viewMat","camera","modelMat","MVP","uniformMatrix4fv","drawElements","TRIANGLES","UNSIGNED_SHORT","newTransform","parentTransform","Camera","upVector","viewMatrix","ShaderProgram","vertexShaderStr","fragShaderStr","rawVertexShader","rawFragShader","vertexShader","fragShader","CompileShader","CreateShader","CreateProgram","VERTEX_SHADER","FRAGMENT_SHADER","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","deleteShader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","SpriteShaderProgram","Input","isMouseClick","isRightMouseClick","keyHold","Initailize","window","addEventListener","e","preventDefault","button","Time","previousTime","deltaTime","Date","now","World","time","input","stopTime","entities","AddEntity","RemoveEntity","SortEntities","StopTime","ResumeTime","canvas","width","height","viewport","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","CULL_FACE","newEntity","entity","findIndex","sort","CollisionBoxShaderProgram","DebugCollisionRenderer","collisionBox","GetScaledPoints","scaledX1","scaledX2","scaledY1","scaledY2","AABB","IsCollide","debugEntity","other","box","otherBox","otherScaledX1","otherScaledX2","otherScaledY1","otherScaledY2","Texture","imgSrc","texture","image","src","imageLoadHanlder","InitTexture","BindTexture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","Image","pixelStorei","UNPACK_FLIP_Y_WEBGL","IsPowerOfTwo","generateMipmap","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","deleteTexture","Sprite","texCoord","texCoordBuffer","texCoordAttrLocation","textureUniformLocation","animTimer","curAnimIndex","animDelay","animationFrame","debugCollisionBox","imageWidth","_this2","imageHeight","h","srcList","delayPerFrame","frame","activeTexture","TEXTURE0","uniform1i","FlappyBird","birdColor","ceil","floor","random","velocity","gravity","jumpPower","canJump","AddAnimation","IsMouseClick","IsKeyDown","powerDispersion","Lerp","start","end","step","FlappyBirdWorld","pipes","pipeSpawnHandler","pipeSpawnDelay","backgroundSprite","grounds","bird","gameover","score","PushPipe","setInterval","clearInterval","pipe","pipeUp","pipeDown","pipeColor","getRandomArbitrary","myWorld","getContext","SetUp","render","requestAnimationFrame","outros","maxScore","parseInt","localStorage","getItem","setItem","body"],"mappings":"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"}